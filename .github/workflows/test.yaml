name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md' # ignore changes to readmes
  pull_request:
    branches: [ main ]

jobs:
  lint: 
    runs-on: ubuntu-latest
    if: github.actor != 'desu-bot' # do not run after release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '20.15'
      - uses: denoland/setup-deno@v1
        with:
          deno-version: '2.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9.5.0'
      - run: pnpm install --frozen-lockfile
      - name: 'TypeScript'
        run: pnpm run lint:tsc:ci
      - name: 'ESLint'
        run: pnpm run lint:ci
      - name: 'Depcruiser'
        run: pnpm run lint:depcruiser
      - name: 'deno publish --dry-run'
        run: npx tsx packages/build/src/cli/main.ts jsr gen-deno-workspace --with-dry-run

  test-node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9.5.0'
      - run: pnpm install --frozen-lockfile
      - name: 'Run tests'
        run: pnpm run test

  cr:
    needs:
      - test-node
      - lint
    runs-on: ubuntu-latest
    # dont run on forks or release commits
    if: github.repository == 'teidesu/fuman' && github.actor != 'desu-bot'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.15'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9.5.0'
      - run: pnpm install --frozen-lockfile
      - name: 'publish to pkg.pr.new'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx tsx packages/build/src/cli/main.ts cr --only-changed

